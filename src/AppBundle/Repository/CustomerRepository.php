<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Customer;
use Doctrine\ORM\EntityRepository;
use Symfony\Bridge\Doctrine\Security\User\UserLoaderInterface;

/**
 * CustomerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CustomerRepository extends EntityRepository implements UserLoaderInterface
{
    /**
     * @inheritdoc
     * @param string $username
     * @return object
     */
    public function loadUserByUsername($username)
    {
        return $this->createQueryBuilder('u')
            ->where('u.email = :username OR u.phone = :phone')
            ->setParameter('email', $username)
            ->setParameter('phone', $username)
            ->getQuery()
            ->getOneOrNullResult();
    }

    /**
     * @param string $phoneNumber
     * @return Customer
     */
    public function findOrCreateByPhone($phoneNumber)
    {
        $customer  = $this->findBy(
            [
                'phone' => $phoneNumber,
            ]
        );
        if ($customer) {
            return $customer[0];
        } else {
            $customerObj = new Customer();
            $customerObj->setPhone($phoneNumber);
            $customerObj->setPassword("1234");
            $customerObj->setIsActive(true);
            $em = $this->getEntityManager();
            $em->persist($customerObj);

            $em->flush();

            return $customerObj;
        }
    }

    /**
     * @param int    $id
     * @param string $currentPassword
     * @return null|object
     */
    public function validationCurrentPassword($id, $currentPassword)
    {
        $result = $this
            ->findOneBy(
                [
                    'id' => $id,
                    'password' => $currentPassword,
                ]
            )
        ;

        return $result;
    }
}
